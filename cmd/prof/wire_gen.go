// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-kratos/kratos/v2/log"
	"github.com/matteo-gz/prof/internal/biz"
	"github.com/matteo-gz/prof/internal/conf"
	"github.com/matteo-gz/prof/internal/data"
	"github.com/matteo-gz/prof/internal/server"
	"github.com/matteo-gz/prof/internal/service"
	"github.com/matteo-gz/prof/pkg/appx"
)

// Injectors from wrie.go:

func wireApp(bs *conf.Bs, confServer *conf.Server, confData *conf.Data, logger log.Logger) (*appx.App, func(), error) {
	dataData, cleanup, err := data.NewData(confData, logger)
	if err != nil {
		return nil, nil, err
	}
	repo := data.NewRepo(dataData, logger)
	usecase := biz.NewUsecase(repo, logger)
	serviceService := service.NewService(bs, usecase, logger)
	interFace := server.NewHTTPServer(bs, serviceService, logger)
	app := newApp(logger, interFace)
	return app, func() {
		cleanup()
	}, nil
}
